# 6.01. Generates and exports Figure 1, map of California with 10 km buffers 
# around new and active wells, as well as a map inset

makeFigure1 <- function() {

  # loads necessary library
    library(ggspatial)
    
  # prepares data
    # layer - California state boundary, made by merging 'cal_counties'
    lyr_california <- cal_counties %>%
      st_geometry() %>%
      st_union()
    # layer - study counties
    lyr_study_counties <- cal_counties %>%
      filter(NAME %in% study_counties$NAME)
    # layer - study region
    lyr_study_region <- cal_counties %>%
      filter(NAME %in% study_counties$NAME) %>%
      st_union()
    # layer - other i.e., non-study counties
    lyr_other_counties <- cal_counties %>%
      filter(NAME %!in% study_counties$NAME)
    # layer - buffer (10 km) around wells drilled during the study period
    lyr_new_wells <- calgem_wells %>%
      # filters to wells drilled during study period
      filter(preprod_1997_to_2011 == 1) %>%
      # selects only columns with lat/long
      select(longitude, latitude) %>%
      # convert into sf object
      st_as_sf(coords = c("longitude", "latitude"),
               crs    = crs_nad83) %>%
      # transform to projected CRS, necessary before making  buffer
      st_transform(crs_projected) %>%
      # makes 100 km buffer
      st_buffer(dist = 10000) %>%  # distance in meters (equivalent to 10 km)
      # merges overlapping polygons
      st_union() %>%
      # converts back to unprojected NAD83 CRS for plotting
      st_transform(crs_nad83)
    # layer - buffer (10 km) around wells productive during the study period
    lyr_active_wells <- calgem_wells %>%
      # filters to wells drilled during study period
      filter(prod_1997_to_2011 == 1) %>%
      # selects only columns with lat/long
      select(longitude, latitude) %>%
      # convert into sf object
      st_as_sf(coords = c("longitude", "latitude"),
               crs = crs_nad83) %>%
      # transform to projected CRS, necessary before making  buffer
      st_transform(crs_projected) %>%
      # makes 100 km buffer
      st_buffer(dist = 10000) %>%  # distance in meters (equivalent to 10 km)
      # merges overlapping polygons
      st_union() %>%
      # converts back to unprojected NAD83 CRS for plotting
      st_transform(crs_nad83)
    # layer - Nevada
    lyr_nevada <- us_states %>% 
      filter(NAME == "Nevada")
    # layer - Western states
    lyr_western_states <- us_states %>%
      filter(NAME %in% c("Washington", "Oregon", "Idaho", "Nevada", "Montana",
                         "Wyoming", "Utah", "Arizona", "Colorado", "New Mexico",
                         "North Dakota", "South Dakota", "Nebraska", "Kansas",
                         "Oklahoma", "Texas"))
    # layer - Canada and Mexico
    lyr_canada_mexico <- world_countries %>%
      filter(CNTRY_NAME %in% c("Canada", "Mexico"))
    # layer - major cities for label
    lyr_cities <- us_places %>%
      filter(NAME %in% c("Bakersfield", "Fresno", "Stockton", "Los Angeles")) %>%
      # convets to projected CRS
      st_transform(crs_projected) %>%
      # converts polygons to centroid points
      st_centroid() %>%
      # converts back to project crs
      st_transform(crs_nad83)
  
  # generates main figure 1
  fig1 <- ggplot() +
    # layer - Nevada
    geom_sf(data = lyr_nevada, fill = "gray70") +
    # layer - urban areas in California, pink fill
    #geom_sf(data = lyr_urban, fill = "#9C4597", color = NA, alpha = 0.7) +
    # layer - study counties
    geom_sf(data = lyr_other_counties,
            fill = "gray90", color = "#FFFFFF", lwd = 0.4) + 
    # layer - study counties
    geom_sf(data = lyr_study_counties, fill = "#FFFFFF", lwd = 0.4) + 
    # layer -  California counties, shaded basemap
    geom_sf(data = lyr_study_region, fill = NA, color = "#000000", lwd = 0.8) +
    # layer -  California counties, shaded basemap
    geom_sf(data = lyr_california, fill = NA, color = "#000000", lwd = 0.9) +
    # layer - 10 km buffer around active wells
    geom_sf(data = lyr_active_wells, aes(alpha = 0.3), fill = "#8A2BE2") +  # purple
    # layer - 10 km buffer around new wells
    geom_sf(data = lyr_new_wells, aes(alpha = 0.3), fill = "#FF7F00") +  # orange
    # layer - major cities
    geom_sf(data = lyr_cities, size = 2, color = "#000000") +
    # adds scale bar
    annotation_scale(location = "bl", width_hint = 0.2) +
    # adds north arrow in the bottom left ('bl')
    annotation_north_arrow(location = "bl", which_north = "true", 
                           style = north_arrow_minimal, pad_y = unit(0.4, "in")) +
    # sets limits of the view window
    xlim(-122.3, -117.1) + ylim(33.5, 39.7) +
    # removes axis labels
    labs(x = "", y = "") +
    # sets theme colors
    theme_bw() +
    # makes graticules (horizontal and vertical lines in background) white
    theme(panel.background = element_rect(fill = "#d0ecfd"),
          panel.grid = element_line(color = "#d0ecfd"),
          legend.position = "none")

  # generates map inset  
  fig1_inset <- ggplot() +
    # layer - Canada and Mexico
    geom_sf(data = lyr_canada_mexico, fill = "gray60") +
    # layer - western states
    geom_sf(data = lyr_western_states, fill = "gray70") +
    # layer -  California counties, shaded basemap
    geom_sf(data = lyr_california, 
            fill = "gray90", color = "#000000") +
    # layer - study region
    geom_sf(data = lyr_study_region, 
            fill = "#FFFFFF", color = "#000000", lwd = 0.5) +
    # sets limits of the view window
    xlim(-124.5, -101) + ylim(31, 49) +
    # removes axis labels
    labs(x = "", y = "") +
    # sets theme colors
    theme_void() +
    # makes graticules (horizontal and vertical lines in background) white
    theme(panel.background = element_rect(fill = "#d0ecfd"),
          panel.grid = element_line(color = "#d0ecfd"),
          legend.position = "none")
  fig1_inset
  
  # exports figures
    ggsave(filename = "figure1_main.png", plot = fig1, device = "png",
           height = 10, width = 7,
           path = "output/figures/manuscript/")
    
    ggsave(filename = "figure1_inset.png", plot = fig1_inset, device = "png",
           height = 5, width = 5,
           path = "output/figures/manuscript/")
  
}

# end